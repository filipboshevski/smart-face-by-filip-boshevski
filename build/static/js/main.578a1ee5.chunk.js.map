{"version":3,"sources":["components/Navigation/Navigation.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","components/SignIn/SignIn.js","components/Register/Register.js","components/Logo/Logo.js","components/Rank/Rank.js","App.js","serviceWorker.js","index.js","components/Logo/Resources/brain.png"],"names":["Navigation","onRouteChange","isSignedIn","clearUser","className","style","display","justifyContent","marginRight","onClick","ImageLinkForm","oninputchange","setImageUrl","type","onChange","textShadow","FaceRecognition","imageURL","id","SignIn","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onClickEnter","key","preventDefault","stopPropagation","onSubmitSignIn","state","signinEmail","signinPassword","validator","isEmail","fetch","method","headers","body","JSON","stringify","email","password","then","response","json","loadUser","console","log","alert","onClickRegister","this","onKeyDown","htmlFor","name","required","Component","Register","onNameChange","registerName","registerEmail","registerPassword","onSubmitRegister","width","Logo","options","max","height","alt","src","brain","fontSize","marginTop","Rank","username","userEntries","particlesOptions","parse","file","App","calculateFaceLocation","data","clarifaiFace","faceReturn","image","document","getElementById","Number","faces","outputs","regions","array","i","length","leftCol","region_info","bounding_box","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","push","user","entries","joined","displayFaceBox","face","box","showAllFaces","top","right","left","bottom","div","imagediv","createElement","Math","floor","random","setAttribute","appendChild","onInputChange","input","onStartInputChange","removePreviousDetections","firstChild","removeChild","route","onButtonSubmit","imageInsert","count","Object","assign","catch","err","params","position","zIndex","onstartinputchange","showallfaces","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.578a1ee5.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = ({onRouteChange, isSignedIn, clearUser}) => {\r\n    const signOut = () => {\r\n        clearUser();\r\n        onRouteChange('signin');\r\n    }\r\n    \r\n    if (isSignedIn) {\r\n        return (\r\n            <nav className='' style={{display: 'flex', justifyContent: 'flex-end', marginRight:'30px'}}>\r\n                <p className='signoutbutton hoverbutton signout link pointer' onClick={signOut}>(Sign Out)</p>\r\n            </nav>\r\n        )\r\n    } else {\r\n        return (\r\n            <nav className='' style={{display: 'flex', justifyContent: 'flex-end', marginRight:'30px'}}>\r\n                <p className='signoutbutton hoverbutton signout link pointer ph4' onClick={() => onRouteChange('signin')}>(Sign In)</p>\r\n                <p className='signoutbutton hoverbutton signout link pointer' onClick={() => onRouteChange('register')}>(Register)</p>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React from 'react'\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({oninputchange, setImageUrl}) => {\r\n    return (\r\n        <div>\r\n            <p className='f3 descr'>\r\n                {'This Magic Brain will detect faces in your pictures. Give it a try!'}\r\n            </p>\r\n            <div className='center'>\r\n                <div className='center w-70 form pa4 br3 shadow-5'>\r\n                    <input className='f4 pad2 w-70 center' type ='text' onChange={oninputchange}/>\r\n                    <button className='hoverbutton w-25 f4 ph3 pv2 white detect' onClick={setImageUrl} style={{textShadow: '1px 1px 3px #000000'}}>Detect</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({imageURL}) => {\r\n    return (\r\n        <div className='center ma'>\r\n            <div className='absolute mt2' id='imagediv'>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FaceRecognition;","import React, { Component } from 'react';\r\nimport './SignIn.css';\r\nimport validator from 'validator';\r\n\r\nclass SignIn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signInEmail: '',\r\n            signInPassword: ''\r\n        }\r\n    }\r\n    \r\n    onEmailChange = (event) => {\r\n        this.setState({signInEmail: event.target.value})\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({signInPassword: event.target.value})\r\n    }\r\n\r\n    onClickEnter = (event) => {\r\n        if(event.key === 'Enter') {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            this.onSubmitSignIn();\r\n        }\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n        const {signInEmail, signInPassword} = this.state;\r\n        if (this.state.signinEmail !== '' && this.state.signinPassword !== '' && validator.isEmail(signInEmail)) {\r\n            fetch('https://sheltered-ridge-17364.herokuapp.com/signin', {\r\n                method: 'post',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    email: signInEmail,\r\n                    password: signInPassword\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                if (response.id) {\r\n                    this.props.loadUser(response);\r\n                    this.props.onRouteChange('home');\r\n                } else if (response === 'Wrong Password!' || response === 'Wrong Credentials!') {\r\n                    console.log('Wrong email address or password entered!');\r\n                    alert('Wrong email address or password entered!');\r\n                }\r\n            })\r\n        } else {\r\n            console.log('Invalid email address or password entered!');\r\n            alert('Invalid email address or password entered!');\r\n        }\r\n    }\r\n\r\n    render () {\r\n        const { onClickRegister } = this.props;\r\n        return (\r\n        <article onKeyDown={this.onClickEnter} className=\"br2 ba dark-gray b--black-10 w-100 w-50-m w-25-l mw6 shadow-4 center background animation\">\r\n            <main className=\"pa4 black-80\">\r\n            <div className=\"measure\">\r\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"ph0 mh0 font\">Sign In</legend>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6 pb2\" htmlFor=\"email-address\">Email</label>\r\n                        <input onChange={this.onEmailChange} className=\"pa2 input-reset ba bg-white hover-black w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" required/>\r\n                    </div>\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6 pb2\" htmlFor=\"password\">Password</label>\r\n                        <input onChange={this.onPasswordChange} className=\"b pa2 input-reset ba bg-white hover-black w-100\" type=\"password\" name=\"password\"  id=\"password\" required/>\r\n                    </div>\r\n                </fieldset>\r\n                <div className=\"\">\r\n                    <input className=\"b ph3 pv2 input-reset ba b--black bg-white animation grow pointer f6 dib\" type=\"submit\" onClick={this.onSubmitSignIn} value=\"Sign in\" />\r\n                </div>\r\n                <div className=\"lh-copy mt3\">\r\n                    <p className=\"f6 link dim black db pointer underline\" onClick={onClickRegister}>Register</p>\r\n                </div>\r\n            </div>\r\n            </main>\r\n        </article>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React, { Component } from 'react';\r\nimport '../SignIn/SignIn.css';\r\nimport validator from 'validator';\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            registerEmail: '',\r\n            registerPassword: '',\r\n            registerName: ''\r\n        }\r\n    }\r\n    \r\n    onNameChange = (event) => {\r\n        this.setState({registerName: event.target.value})\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({registerEmail: event.target.value})\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({registerPassword: event.target.value})\r\n    }\r\n\r\n    onSubmitRegister = () => {\r\n        const {registerEmail, registerName, registerPassword} = this.state;\r\n        if (validator.isEmail(registerEmail)) {\r\n            fetch('https://sheltered-ridge-17364.herokuapp.com/register', {\r\n                method: 'post',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    email: registerEmail,\r\n                    password: registerPassword,\r\n                    name: registerName\r\n                })\r\n            })\r\n            .then(response => response.json())\r\n            .then((response) => {\r\n                if (response.id) {\r\n                    this.props.loadUser(response);\r\n                    this.props.onRouteChange('home');\r\n                } else if (response === 'Invalid Form Submission!') {\r\n                    console.log('Invalid form submitted! Check Again!');\r\n                    alert('Invalid form submitted! Check again!');\r\n                }\r\n            })\r\n        } else {\r\n            console.log('Invalid email entered!');\r\n            alert('Invalid email address entered!');\r\n        }\r\n    }\r\n\r\n    onClickEnter = (event) => {\r\n        if(event.key === 'Enter') {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            this.onSubmitRegister();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <article onKeyDown={this.onClickEnter} className=\"br2 ba dark-gray b--black-10 w-100 w-50-m w-25-l mw6 shadow-4 center background animation\">\r\n            <main className=\"pa4 black-80\">\r\n            <div className=\"measure\">\r\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"ph0 mh0 font\">Register</legend>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6 pb2\">Name</label>\r\n                        <input onChange={this.onNameChange} className=\"pa2 input-reset ba bg-white hover-black w-100\" type=\"text\" name=\"name\"  id=\"name\" width='218px' required/>\r\n                    </div>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6 pb2\" htmlFor=\"email-address\">Email</label>\r\n                        <input onChange={this.onEmailChange} className=\"pa2 input-reset ba bg-white hover-black w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" required/>\r\n                    </div>\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6 pb2\" htmlFor=\"password\">Password</label>\r\n                        <input onChange={this.onPasswordChange} className=\"b pa2 input-reset ba bg-white hover-black w-100\" type=\"password\" name=\"password\"  id=\"password\" required/>\r\n                    </div>\r\n                </fieldset>\r\n                <div>\r\n                    <input className=\"b ph3 pv2 input-reset ba b--black bg-white animation grow pointer f6 dib\" type=\"submit\" onClick={this.onSubmitRegister} value=\"Register\" />\r\n                </div>\r\n            </div>\r\n            </main>\r\n        </article>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport './Logo.css';\r\nimport brain from './Resources/brain.png'\r\n\r\nconst Logo = () => {\r\n    \r\n    return (\r\n        <div className='ml5 mt0'>\r\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55 }} style={{ height: 125, width: 125 }} >\r\n                <div className='Tilt-inner brainlogo'>\r\n                    <img className='' alt='logo' src={brain} />\r\n                    <p className='signoutbutton hoverbutton signout link pointer madeby' style={{fontSize: '35px', marginTop: '8px'}}>{\"(Made by Filip Boshevski)\"}</p>\r\n                </div>\r\n            </Tilt>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './Rank.css';\r\n\r\nconst Rank = ({username, userEntries}) => {\r\n    return(\r\n        <div className='pa1'>\r\n            <div className='white f3 text pa2'>\r\n                {`${username}, your current rank is...`}\r\n            </div>\r\n            <div className='white f2 text'>\r\n                {userEntries}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rank;","import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport file from './background-animation.json';\n\nimport './App.css';\n\nconst particlesOptions = JSON.parse(JSON.stringify(file));\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageURL: '',\n      box: [],\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n  calculateFaceLocation = (data) => {\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    const faces = data.outputs[0].data.regions;\n    const array = [];\n    let clarifaiFace, faceReturn;\n    for (let i = 0; i < faces.length; i++) {\n      clarifaiFace = faces[i].region_info.bounding_box;\n      faceReturn = {\n        leftCol: clarifaiFace.left_col * width - 10,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - (clarifaiFace.right_col * width) - 10,\n        bottomRow: height - (clarifaiFace.bottom_row * height) + 20\n      };\n      array.push(faceReturn);\n      faceReturn = {};\n    }\n    return array;\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  displayFaceBox = (face) => {\n    this.state.box.push(face);\n    this.showAllFaces(this.state.box);\n  }\n\n  showAllFaces = (box) => {\n        let top, right, left, bottom, div;\n        const imagediv = document.getElementById('imagediv');\n        const max = 5000000;\n        const min = 0;\n        for (let i = 0; i < box[0].length; i++) {\n          top = box[0][i].topRow + 20;\n          right = box[0][i].rightCol;\n          left = box[0][i].leftCol;\n          bottom = box[0][i].bottomRow - 20;\n          div = document.createElement('div');\n          div.id = `${Math.floor(Math.random() * (+max - +min)) + +min}`;\n          div.setAttribute('style', `top: ${top}px; right: ${right}px; bottom: ${bottom}px; left: ${left}px;`);\n          div.className = 'bounding-box';\n          imagediv.appendChild(div);\n        }\n    }\n\n  onInputChange = (event) => { \n    this.setState({input: event.target.value});\n  }\n\n  onStartInputChange = () => {\n    this.setState({input: ''});\n  }\n\n  removePreviousDetections = () => {\n    const imagediv = document.getElementById('imagediv');\n    while (imagediv.firstChild) {\n        imagediv.removeChild(imagediv.firstChild);\n    }\n  }\n\n  clearUser = () => {\n    this.setState({\n      input: '',\n      imageURL: '',\n      box: [],\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    })\n  }\n\n  onButtonSubmit = () => {\n    if (this.state.imageURL !== this.state.input) {\n      this.removePreviousDetections();\n      this.setState({imageURL: this.state.input, box: []});\n      const imagediv = document.getElementById('imagediv');\n      const imageInsert = document.createElement('img');\n      imageInsert.id = 'inputimage';\n      imageInsert.setAttribute('style', 'padding-top: 2em');\n      imageInsert.setAttribute('width', '500');\n      imageInsert.setAttribute('height', 'auto');\n      imageInsert.src = this.state.input;\n      imageInsert.alt = '';\n      imagediv.appendChild(imageInsert);\n      fetch('https://sheltered-ridge-17364.herokuapp.com/imageurl', {\n        method: 'post',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n          input: this.state.input\n        })})\n      .then(response => response.json())\n      .then(response => {\n        if (response) {\n          fetch('https://sheltered-ridge-17364.herokuapp.com/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          })\n          .then(response => response.json())\n          .then(count => {\n            this.setState(Object.assign(this.state.user, {entries: count}))\n          })\n          .catch(console.log);\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      })\n      .catch(err => console.log(err));\n    }\n  else {\n    return;\n  }\n}\n\n  onRouteChange = (route) => {\n    switch (route) {\n      case 'signin':\n        this.setState({isSignedIn: false});\n        break;\n\n      case 'home':\n        this.setState({isSignedIn: true});\n        break;\n      \n      case 'register':\n        this.setState({isSignedIn: false});\n        break;\n      \n      default:\n        break;\n    }\n    this.setState({route: route});\n  }\n\n  onClickRegister = () => {\n    this.setState({route: 'register'});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles params={particlesOptions} style={{position: 'fixed', top: '0', bottom: '0', left: '0', right: '0', zIndex: '-1'}}/>\n        <Navigation clearUser={this.clearUser} onRouteChange={this.onRouteChange} isSignedIn={this.state.isSignedIn}/>\n        { this.state.route === 'home'\n        ? <div>\n        <Logo />\n        <Rank username={this.state.user.name} userEntries={this.state.user.entries} />\n        <ImageLinkForm onstartinputchange={this.onStartInputChange} oninputchange={this.onInputChange} setImageUrl={this.onButtonSubmit} />\n        <FaceRecognition showallfaces={this.showAllFaces} box={this.state.box} imageURL={this.state.imageURL}/>\n      </div>\n        : ( this.state.route === 'signin'\n        ? <SignIn loadUser={this.loadUser} onClickRegister={this.onClickRegister} onRouteChange={this.onRouteChange} />\n        : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/> )\n    }\n      </div>\n    )\n  }\n};\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'tachyons';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brain.0dd2024b.png\";"],"sourceRoot":""}